{"version":3,"sources":["paginator.js"],"names":["PaginatorOptions","rawOpts","PaginatorRenderer","opts","model","view","self","this","mountTo","parent","render","console","log","PaginatorModel","createElement","$el","$","$watch","addClass","append","paginator","PaginatorView","Paginator","renderer","bindToElement","createModel","createView","createRenderer","observeModel","modelObserver","observe","childList","attributes","characterData","subtree","pub","MutationObserver","refresh","bindTo","data","fn","paginate"],"mappings":"CAAA,WACA,QAAAA,GAAAC,GACA,MAAAA,GAiBA,QAAAC,GAAAC,GACA,GACAC,GACAC,EAFAC,EAAAC,IAIAD,GAAAE,QAAA,SAAAC,GACAL,EAAAK,EAAAL,MACAC,EAAAI,EAAAJ,MAGAC,EAAAI,OAAA,WACAC,QAAAC,IAAA,cAIA,QAAAC,GAAAV,GAIA,QAAAW,KACAR,EAAAS,IAAAT,EAAAS,KAAAC,EAAA,SACAV,EAAAW,SAGAX,EAAAW,OAAAX,EAAAW,QAAAD,EAAA,SAAAE,SAAA,SACAZ,EAAAS,IAAAI,OAAAb,EAAAW,SATA,GACAG,GADAd,EAAAC,IAYAD,GAAAE,QAAA,SAAAC,GACAK,IACAM,EAAAX,EACAW,EAAAL,IAAAI,OAAAb,EAAAS,MAIA,QAAAM,GAAAlB,GAIA,QAAAW,KACAR,EAAAS,IAAAT,EAAAS,KAAAC,EAAA,SAJA,GACAI,GADAd,EAAAC,IAOAD,GAAAE,QAAA,SAAAC,GACAK,IACAM,EAAAX,EACAW,EAAAL,IAAAI,OAAAb,EAAAS,MAIA,QAAAO,GAAAnB,GAWA,QAAAO,KACAJ,EAAAiB,SAAAb,SAGA,QAAAc,GAAAT,GACAT,EAAAS,IAAAA,EAGA,QAAAU,KACAnB,EAAAF,MAAAI,QAAAF,GAGA,QAAAoB,KACApB,EAAAD,KAAAG,QAAAF,GAGA,QAAAqB,KACArB,EAAAiB,SAAAf,QAAAF,GAGA,QAAAsB,KACAC,EACAC,QAAAxB,EAAAF,MAAAa,OAAA,IACAc,WAAA,EACAC,YAAA,EACAC,eAAA,EACAC,SAAA,IApCA,GACAL,GACAM,EAFA7B,EAAAC,IAIAJ,GAAA,GAAAH,GAAAG,GACAG,EAAAF,MAAA,GAAAS,GAAAV,GACAG,EAAAD,KAAA,GAAAgB,GAAAlB,GACAG,EAAAiB,SAAA,GAAArB,GAAAC,GACA0B,EAAA,GAAAO,kBAAA1B,GAgCAyB,GACAE,QAAA,WACA3B,MAIAJ,EAAAgC,OAAA,SAAAvB,GACAS,EAAAT,GACAU,IACAC,IACAC,IACAC,IACAb,EAAAwB,KAAA,YAAAJ,IAIAnB,EAAAwB,GAAAC,SAAA,SAAAtC,GACA,GAAAmB,GAAAnB,GAAAmC,OAAA/B","file":"jquery-paginator.min.js","sourcesContent":["(function () {\n    function PaginatorOptions(rawOpts) {\n        return rawOpts;\n    }\n\n    function PaginatorPage(opts) {\n        var self = this,\n            view;\n\n        function createElement() {\n            self.$el = self.$el || $('<div>');\n        }\n\n        self.mountTo = function mountTo(parent) {\n            createElement();\n            view = parent;\n        };\n    }\n\n    function PaginatorRenderer(opts) {\n        var self = this,\n            model,\n            view;\n\n        self.mountTo = function mountTo(parent) {\n            model = parent.model;\n            view = parent.view;\n        };\n\n        self.render = function render() {\n            console.log('rendering');\n        };\n    }\n\n    function PaginatorModel(opts) {\n        var self = this,\n            paginator;\n\n        function createElement() {\n            self.$el = self.$el || $('<div>');\n            if (!!self.$watch) {\n                return;\n            }\n            self.$watch = self.$watch || $('<div>').addClass('watch');\n            self.$el.append(self.$watch);\n        }\n\n        self.mountTo = function mountTo(parent) {\n            createElement();\n            paginator = parent;\n            paginator.$el.append(self.$el);\n        };\n    }\n\n    function PaginatorView(opts) {\n        var self = this,\n            paginator;\n\n        function createElement() {\n            self.$el = self.$el || $('<div>');\n        }\n\n        self.mountTo = function mountTo(parent) {\n            createElement();\n            paginator = parent;\n            paginator.$el.append(self.$el);\n        };\n    }\n\n    function Paginator(opts) {\n        var self = this,\n            modelObserver,\n            pub;\n\n        opts = new PaginatorOptions(opts);\n        self.model = new PaginatorModel(opts);\n        self.view = new PaginatorView(opts);\n        self.renderer = new PaginatorRenderer(opts);\n        modelObserver = new MutationObserver(render);\n\n        function render() {\n            self.renderer.render();\n        }\n\n        function bindToElement($el) {\n            self.$el = $el;\n        }\n\n        function createModel() {\n            self.model.mountTo(self);\n        }\n\n        function createView() {\n            self.view.mountTo(self);\n        }\n\n        function createRenderer() {\n            self.renderer.mountTo(self);\n        }\n\n        function observeModel() {\n            modelObserver\n                .observe(self.model.$watch[0], {\n                    childList: true,\n                    attributes: true,\n                    characterData: true,\n                    subtree: true\n                });\n        }\n\n        pub = {\n            refresh: function doRender() {\n                render();\n            }\n        };\n\n        self.bindTo = function bindTo($el) {\n            bindToElement($el);\n            createModel();\n            createView();\n            createRenderer();\n            observeModel();\n            $el.data('paginator', pub);\n        };\n    }\n\n    $.fn.paginate = function paginate(opts) {\n        new Paginator(opts).bindTo(this);\n    };\n})();\n"]}